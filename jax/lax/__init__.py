# Copyright 2019 The JAX Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Note: import <name> as <name> is required for names to be exported.
# See PEP 484 & https://github.com/jax-ml/jax/issues/7570

from jax._src.ad_util import stop_gradient_p as stop_gradient_p
from jax._src.dispatch import device_put_p as device_put_p
from jax._src.lax.ann import (
  approx_max_k as approx_max_k,
  approx_min_k as approx_min_k,
  approx_top_k_p as approx_top_k_p
)
from jax._src.lax.control_flow import (
    associative_scan as associative_scan,
    cond_p as cond_p,
    cond as cond,
    cumlogsumexp_p as cumlogsumexp_p,
    cumlogsumexp as cumlogsumexp,
    cummax_p as cummax_p,
    cummax as cummax,
    cummin_p as cummin_p,
    cummin as cummin,
    cumprod_p as cumprod_p,
    cumprod as cumprod,
    cumsum_p as cumsum_p,
    cumsum as cumsum,
    custom_linear_solve as custom_linear_solve,
    custom_root as custom_root,
    fori_loop as fori_loop,
    linear_solve_p as linear_solve_p,
    map as map,
    platform_dependent as platform_dependent,
    platform_index_p as platform_index_p,
    scan_p as scan_p,
    scan as scan,
    switch as switch,
    while_loop as while_loop,
    while_p as while_p,
)
from jax._src.lax.convolution import (
  ConvDimensionNumbers as ConvDimensionNumbers,
  ConvGeneralDilatedDimensionNumbers as ConvGeneralDilatedDimensionNumbers,
  conv_dimension_numbers as conv_dimension_numbers,
  conv_general_dilated_p as conv_general_dilated_p,
  conv_general_dilated as conv_general_dilated,
  conv_general_permutations as conv_general_permutations,
  conv_general_shape_tuple as conv_general_shape_tuple,
  conv_shape_tuple as conv_shape_tuple,
  conv_transpose_shape_tuple as conv_transpose_shape_tuple,
  conv_transpose as conv_transpose,
  conv_with_general_padding as conv_with_general_padding,
  conv as conv,
)
from jax._src.lax.fft import (
  FftType as FftType,
  fft_p as fft_p,
  fft as fft,
)
from jax._src.lax.lax import (
  DotAlgorithmPreset as DotAlgorithmPreset,
  DotAlgorithm as DotAlgorithm,
  DotDimensionNumbers as DotDimensionNumbers,
  PrecisionLike as PrecisionLike,
  Precision as Precision,
  RandomAlgorithm as RandomAlgorithm,
  RoundingMethod as RoundingMethod,
  abs_p as abs_p,
  abs as abs,
  acos_p as acos_p,
  acos as acos,
  acosh_p as acosh_p,
  acosh as acosh,
  add_p as add_p,
  add as add,
  after_all_p as after_all_p,
  after_all as after_all,
  and_p as and_p,
  argmax_p as argmax_p,
  argmax as argmax,
  argmin_p as argmin_p,
  argmin as argmin,
  asin_p as asin_p,
  asin as asin,
  asinh_p as asinh_p,
  asinh as asinh,
  atan2_p as atan2_p,
  atan2 as atan2,
  atan_p as atan_p,
  atan as atan,
  atanh_p as atanh_p,
  atanh as atanh,
  batch_matmul as batch_matmul,
  bitcast_convert_type_p as bitcast_convert_type_p,
  bitcast_convert_type as bitcast_convert_type,
  bitwise_and as bitwise_and,
  bitwise_not as bitwise_not,
  bitwise_or as bitwise_or,
  bitwise_xor as bitwise_xor,
  broadcast_in_dim_p as broadcast_in_dim_p,
  broadcast_in_dim as broadcast_in_dim,
  broadcast_shapes as broadcast_shapes,
  broadcast_to_rank as broadcast_to_rank,
  broadcast as broadcast,
  broadcasted_iota as broadcasted_iota,
  cbrt_p as cbrt_p,
  cbrt as cbrt,
  ceil_p as ceil_p,
  ceil as ceil,
  clamp_p as clamp_p,
  clamp as clamp,
  clz_p as clz_p,
  clz as clz,
  collapse as collapse,
  complex_p as complex_p,
  complex as complex,
  concatenate_p as concatenate_p,
  concatenate as concatenate,
  conj_p as conj_p,
  conj as conj,
  convert_element_type_p as convert_element_type_p,
  convert_element_type as convert_element_type,
  copy_p as copy_p,
  cos_p as cos_p,
  cos as cos,
  cosh_p as cosh_p,
  cosh as cosh,
  create_token_p as create_token_p,
  create_token as create_token,
  div_p as div_p,
  div as div,
  dot_general_p as dot_general_p,
  dot_general as dot_general,
  dot as dot,
  dtype as dtype,
  eq_p as eq_p,
  eq_to_p as eq_to_p,
  eq as eq,
  exp2_p as exp2_p,
  exp2 as exp2,
  exp_p as exp_p,
  expand_dims as expand_dims,
  exp as exp,
  expm1_p as expm1_p,
  expm1 as expm1,
  floor_p as floor_p,
  floor as floor,
  full_like as full_like,
  full as full,
  ge_p as ge_p,
  ge as ge,
  gt_p as gt_p,
  gt as gt,
  imag_p as imag_p,
  imag as imag,
  infeed_p as infeed_p,
  infeed as infeed,
  integer_pow_p as integer_pow_p,
  integer_pow as integer_pow,
  iota_p as iota_p,
  iota as iota,
  is_finite_p as is_finite_p,
  is_finite as is_finite,
  le_p as le_p,
  le_to_p as le_to_p,
  le as le,
  log1p_p as log1p_p,
  log1p as log1p,
  log_p as log_p,
  log as log,
  logistic_p as logistic_p,
  logistic as logistic,
  lt_p as lt_p,
  lt_to_p as lt_to_p,
  lt as lt,
  max_p as max_p,
  max as max,
  min_p as min_p,
  min as min,
  mul_p as mul_p,
  mul as mul,
  ne_p as ne_p,
  ne as ne,
  neg_p as neg_p,
  neg as neg,
  nextafter_p as nextafter_p,
  nextafter as nextafter,
  not_p as not_p,
  optimization_barrier_p as optimization_barrier_p,
  optimization_barrier as optimization_barrier,
  or_p as or_p,
  outfeed_p as outfeed_p,
  outfeed as outfeed,
  pad_p as pad_p,
  pad as pad,
  padtype_to_pads as padtype_to_pads,
  population_count_p as population_count_p,
  population_count as population_count,
  pow_p as pow_p,
  pow as pow,
  ragged_dot as ragged_dot,
  real_p as real_p,
  real as real,
  reciprocal as reciprocal,
  reduce_and_p as reduce_and_p,
  reduce_max_p as reduce_max_p,
  reduce_min_p as reduce_min_p,
  reduce_or_p as reduce_or_p,
  reduce_p as reduce_p,
  reduce_precision_p as reduce_precision_p,
  reduce_precision as reduce_precision,
  reduce_prod_p as reduce_prod_p,
  reduce_sum_p as reduce_sum_p,
  reduce_xor_p as reduce_xor_p,
  reduce as reduce,
  rem_p as rem_p,
  rem as rem,
  reshape_p as reshape_p,
  reshape as reshape,
  rev_p as rev_p,
  rev as rev,
  rng_bit_generator_p as rng_bit_generator_p,
  rng_bit_generator as rng_bit_generator,
  rng_uniform_p as rng_uniform_p,
  rng_uniform as rng_uniform,
  round_p as round_p,
  round as round,
  rsqrt_p as rsqrt_p,
  rsqrt as rsqrt,
  select_n_p as select_n_p,
  select_n as select_n,
  select as select,
  shift_left_p as shift_left_p,
  shift_left as shift_left,
  shift_right_arithmetic_p as shift_right_arithmetic_p,
  shift_right_arithmetic as shift_right_arithmetic,
  shift_right_logical_p as shift_right_logical_p,
  shift_right_logical as shift_right_logical,
  sign_p as sign_p,
  sign as sign,
  sin_p as sin_p,
  sin as sin,
  sinh_p as sinh_p,
  sinh as sinh,
  sort_key_val as sort_key_val,
  sort_p as sort_p,
  sort as sort,
  sqrt_p as sqrt_p,
  sqrt as sqrt,
  square_p as square_p,
  square as square,
  squeeze_p as squeeze_p,
  squeeze as squeeze,
  stop_gradient as stop_gradient,
  sub_p as sub_p,
  sub as sub,
  tan_p as tan_p,
  tan as tan,
  tanh_p as tanh_p,
  tanh as tanh,
  top_k_p as top_k_p,
  top_k as top_k,
  transpose_p as transpose_p,
  transpose as transpose,
  xor_p as xor_p,
  zeros_like_array as zeros_like_array,
)
from jax._src.lax.other import (
  conv_general_dilated_local as conv_general_dilated_local,
  conv_general_dilated_patches as conv_general_dilated_patches
)
from jax._src.lax.parallel import (
  all_gather_p as all_gather_p,
  all_gather as all_gather,
  all_to_all_p as all_to_all_p,
  all_to_all as all_to_all,
  axis_index_p as axis_index_p,
  axis_index as axis_index,
  pbroadcast as pbroadcast,
  pmax_p as pmax_p,
  pmax as pmax,
  pmean as pmean,
  pmin_p as pmin_p,
  pmin as pmin,
  ppermute_p as ppermute_p,
  ppermute as ppermute,
  pshuffle as pshuffle,
  psum_p as psum_p,
  psum_scatter as psum_scatter,
  psum as psum,
  pswapaxes as pswapaxes,
)
from jax._src.lax.slicing import (
  GatherDimensionNumbers as GatherDimensionNumbers,
  GatherScatterMode as GatherScatterMode,
  ScatterDimensionNumbers as ScatterDimensionNumbers,
  dynamic_index_in_dim as dynamic_index_in_dim,
  dynamic_slice_in_dim as dynamic_slice_in_dim,
  dynamic_slice_p as dynamic_slice_p,
  dynamic_slice as dynamic_slice,
  dynamic_update_index_in_dim as dynamic_update_index_in_dim,
  dynamic_update_slice_in_dim as dynamic_update_slice_in_dim,
  dynamic_update_slice_p as dynamic_update_slice_p,
  dynamic_update_slice as dynamic_update_slice,
  gather_p as gather_p,
  gather as gather,
  index_in_dim as index_in_dim,
  index_take as index_take,
  scatter_add_p as scatter_add_p,
  scatter_add as scatter_add,
  scatter_apply as scatter_apply,
  scatter_max_p as scatter_max_p,
  scatter_max as scatter_max,
  scatter_min_p as scatter_min_p,
  scatter_min as scatter_min,
  scatter_mul_p as scatter_mul_p,
  scatter_mul as scatter_mul,
  scatter_p as scatter_p,
  scatter_sub_p as scatter_sub_p,
  scatter_sub as scatter_sub,
  scatter as scatter,
  slice_in_dim as slice_in_dim,
  slice_p as slice_p,
  slice as slice,
)
from jax._src.lax.special import (
  bessel_i0e_p as bessel_i0e_p,
  bessel_i0e as bessel_i0e,
  bessel_i1e_p as bessel_i1e_p,
  bessel_i1e as bessel_i1e,
  betainc as betainc,
  digamma_p as digamma_p,
  digamma as digamma,
  erf_inv_p as erf_inv_p,
  erf_inv as erf_inv,
  erf_p as erf_p,
  erf as erf,
  erfc_p as erfc_p,
  erfc as erfc,
  igamma_grad_a_p as igamma_grad_a_p,
  igamma_grad_a as igamma_grad_a,
  igamma_p as igamma_p,
  igamma as igamma,
  igammac_p as igammac_p,
  igammac as igammac,
  lgamma_p as lgamma_p,
  lgamma as lgamma,
  polygamma_p as polygamma_p,
  polygamma as polygamma,
  random_gamma_grad_p as random_gamma_grad_p,
  random_gamma_grad as random_gamma_grad,
  regularized_incomplete_beta_p as regularized_incomplete_beta_p,
  zeta_p as zeta_p,
  zeta as zeta,
)
from jax._src.lax.windowed_reductions import (
    reduce_window_max_p as reduce_window_max_p,
    reduce_window_min_p as reduce_window_min_p,
    reduce_window_p as reduce_window_p,
    reduce_window_shape_tuple as reduce_window_shape_tuple,
    reduce_window_sum_p as reduce_window_sum_p,
    reduce_window as reduce_window,
    select_and_gather_add_p as select_and_gather_add_p,
    select_and_scatter_add_p as select_and_scatter_add_p,
    select_and_scatter_p as select_and_scatter_p,
)
from jax._src.pjit import sharding_constraint_p as sharding_constraint_p
from jax._src.pjit import with_sharding_constraint as with_sharding_constraint
from jax.lax import linalg as linalg
